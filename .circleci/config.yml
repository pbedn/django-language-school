# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build_and_test:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "poetry.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
            source $HOME/.poetry/env
            python3 -m venv venv
            . venv/bin/activate
            poetry install

      - save_cache:
          paths:
            - venv/
          key: v1-dependencies-{{ checksum "poetry.lock" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            export DJANGO_SETTINGS_MODULE=school.settings.test
            coverage run --source='.' manage.py test
            coverage html -d test-reports

      - store_artifacts:
          path: test-reports
          destination: test-reports

  deploy:
    machine:
      enabled: true
    steps:
      - run:
          name: deploy over ssh
          command: |
            ssh $SSH_USER@$SSH_HOST "git -C $PROJECT_DIR fetch --all && git checkout --force origin/master"

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build_and_test
      - deploy:
          requires:
            - build_and_test
          filters:
            branches:
              only: master
